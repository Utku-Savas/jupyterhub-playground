services:
  jupyterhub:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-jupyterhub
    container_name: jupyterhub
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOCKER_JUPYTER_IMAGE: jupyter-user-image
      DOCKER_NETWORK_NAME: jupyterhub_net
    networks:
      - jupyterhub_net
  jupyter-user:
    build:
      context: .
      dockerfile: Dockerfile.user
    environment:
      - GRANT_SUDO=yes
    image: jupyter-user-image
    runtime: nvidia
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - jupyterhub_net
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
        - "3000:3000"
    volumes:
        - grafana-storage:/var/lib/grafana
        - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
        - ./grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
        - ./grafana/provisioning/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
        - jupyterhub_net
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    restart: unless-stopped
    ports:
    - "8081:8080"
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
    - jupyterhub_net

volumes:
  grafana-storage:

networks:
  jupyterhub_net:
    external: true
